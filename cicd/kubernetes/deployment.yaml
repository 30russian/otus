apiVersion: apps/v1
kind: Deployment
metadata:
  name: otus-deployment
spec:
  selector:
    matchLabels:
      app: otus-app
  replicas: 2
  template:
      metadata:
        labels:
            app: otus-app
      spec:
        containers:
        - name: otus-app
          image: 30russian/otus:1.0.0
          imagePullPolicy: Always
#          command: ["gunicorn"]
#          args: ["-b", "0.0.0.0:8000", "-t", "1200", "-w", "9", "otus.otus.wsgi"]
          env:
            - name: OTUS_CONFIG_FILE
              value: /opt/otus/app/config.json
            - name: OTUS_POSTGRES_CONFIG
              value: /opt/otus/postgres/config.json
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                configMapKeyRef:
                  key: djangoSettingsModule
                  name: otus-configmap
          readinessProbe:
            httpGet:
              port: otus-app-web
              path: /health
          ports:
            - name: otus-app-web
              containerPort: 8000
            - name: worker1-metrics
              containerPort: 8001
            - name: worker2-metrics
              containerPort: 8002
            - name: worker3-metrics
              containerPort: 8003
            - name: worker4-metrics
              containerPort: 8004
            - name: worker5-metrics
              containerPort: 8005
            - name: worker6-metrics
              containerPort: 8006
            - name: worker7-metrics
              containerPort: 8007
            - name: worker8-metrics
              containerPort: 8008
            - name: worker9-metrics
              containerPort: 8009
          volumeMounts:
            - mountPath: /opt/otus/app
              name: config
            - mountPath: /opt/otus/postgres
              name: postgres
        volumes:
          - name: config
            configMap:
              name: otus-configmap
              items:
                - key: configFile
                  path: config.json
          - name: postgres
            secret:
              secretName: otus-secret
              items:
                - key: postgresSettings
                  path: config.json